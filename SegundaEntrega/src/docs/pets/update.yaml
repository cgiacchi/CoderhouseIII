paths:
  /api/pets/{id}:
    put:
      summary: Update a pet by ID (Only for logged-in admins)
      description: Update the details of an existing pet.
      tags:
        - Pets
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Unique identifier for the pet.
          schema:
            type: string
            format: ObjectId
            description: The ID of the pet to retrieve.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Buddy"
                type:
                  type: string
                  example: "Dog"
                birthDate:
                  type: string
                  example: "2020-01-01"
                  format: date
                sex:
                  type: string
                  enum: [male, female]
                sterilized:
                  type: boolean
                  example: true
      responses:
        200:
          description: Pet updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pet"
        400:
          description: No data to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 400
                      message:
                        type: string
                        example: "No data to update"
        401:
          description: Unauthorized (user not logged in)
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 401
                      message:
                        type: string
                        example: User not authenticated, please login 
        403:
          description: Forbidden (user not authorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 403
                      message:
                        type: string
                        example: "User not authorized"                            
        404:
          description: Pet not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: "Pet not found"                
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 500
                      message:
                        type: string
                        example: "Internal server error"


